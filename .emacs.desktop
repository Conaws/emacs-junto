;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Fri Feb 26 14:02:54 2016
;; Desktop file format version 206
;; Emacs version 24.5.1

;; Global section:
(setq desktop-saved-frameset [frameset 1 (22224 3510 558872 0) (desktop . "206") "conor@Conors-MacBook-Pro.local" nil nil ((((font-backend mac-ct ns) (fontsize . 0) (font . "-*-Menlo-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 2) (vertical-scroll-bars . right) (foreground-color . "#839496") (background-color . "#002b36") (line-spacing) (left-fringe . 10) (right-fringe . 11) (menu-bar-lines . 1) (tool-bar-lines . 1) (title) (icon-type) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 15) (alpha) (fullscreen . maximized) (horizontal-scroll-bars . t) (display-type . color) (background-mode . dark) (cursor-color . "#839496") (environment) (frameset--id . "2194-1551-F36D-7CC6") (frameset--mini t . t) (modeline . t) (minibuffer . t) (unsplittable) (right-divider-width . 0) (bottom-divider-width . 0) (icon-name) (display . "Conors-MacBook-Pro.local") (explicit-name) (tool-bar-position . top) (visibility . t) (height . 50) (width . 177) (left . 8) (top . 23)) ((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 56) (min-pixel-width . 70) (min-pixel-height-ignore . 42) (min-pixel-width-ignore . 56) (min-pixel-height-safe . 14) (min-pixel-width-safe . 14)) leaf (pixel-width . 1275) (pixel-height . 686) (total-width . 182) (total-height . 49) (normal-height . 1.0) (normal-width . 1.0) (buffer "init.el" (selected . t) (hscroll . 0) (fringes 10 11 nil) (margins nil) (scroll-bars 15 3 t nil) (vscroll . 0) (dedicated) (point . 6652) (start . 5743))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '("C-x" "terminolo" "Explanation" "[71" "720" "Chap" "C" "Cha" "Chapter" "Cha" "Chap" "Chapter" "Conclus" "The Af" "Metho" "The Ris"))
(setq regexp-search-ring nil)
(setq register-alist (list '(50 . [registerv [60 60 60 134217830 134217830 62 62 62 left left left left 3 3 down down 1] "Unprintable entity" kmacro-execute-from-register "Unprintable entity"]) '(49 . [registerv [60 60 60 134217830 62 62 62 left left 3 3 left left 3 3 down down 1] "Unprintable entity" kmacro-execute-from-register "Unprintable entity"]) (desktop-list* 116 (vector 'registerv (vector [frameset 1 (22223 13681 965041 0) register nil nil nil ((((font-backend mac-ct ns) (fontsize . 0) (font . "-*-Menlo-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 2) (vertical-scroll-bars . right) (foreground-color . "#839496") (background-color . "#002b36") (line-spacing) (left-fringe . 10) (right-fringe . 11) (menu-bar-lines . 1) (tool-bar-lines . 1) (buffer-predicate) (title) (icon-type) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 15) (alpha) (fullscreen . maximized) (window-system . ns) (horizontal-scroll-bars . t) (display-type . color) (background-mode . dark) (cursor-color . "#839496") (environment) (frameset--id . "2194-1551-F36D-7CC6") (frameset--mini t . t) (modeline . t) (minibuffer . t) (unsplittable) (right-divider-width . 0) (bottom-divider-width . 0) (window-id . "1") (icon-name) (display . "Conors-MacBook-Pro.local") (explicit-name) (parent-id) (tool-bar-position . top) (visibility . t) (height . 50) (width . 177) (buffer-list "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity") (buried-buffer-list "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity" "Unprintable entity") (left . 8) (top . 23)) ((min-height . 8) (min-width . 20) (min-height-ignore . 6) (min-width-ignore . 16) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 112) (min-pixel-width . 140) (min-pixel-height-ignore . 84) (min-pixel-width-ignore . 112) (min-pixel-height-safe . 28) (min-pixel-width-safe . 28)) hc (pixel-width . 1275) (pixel-height . 686) (total-width . 182) (total-height . 49) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (vc (pixel-width . 357) (pixel-height . 686) (total-width . 51) (total-height . 49) (normal-height . 1.0) (normal-width . 0.28) (combination-limit) (leaf (pixel-width . 357) (pixel-height . 336) (total-width . 51) (total-height . 24) (normal-height . 0.5) (normal-width . 1.0) (buffer "The Beginning of Infinity.org" (selected) (hscroll . 0) (fringes 10 11 nil) (margins nil) (scroll-bars 15 3 t nil) (vscroll . 0) (dedicated) (point . 15752) (start . 15504))) (leaf (last . t) (pixel-width . 357) (pixel-height . 350) (total-width . 51) (total-height . 25) (normal-height . 0.5) (normal-width . 1.0) (buffer "The Beginning of Infinity.org" (selected . t) (hscroll . 0) (fringes 10 11 nil) (margins nil) (scroll-bars 15 3 t nil) (vscroll . 0) (dedicated) (point . 700341) (start . 700340)))) (leaf (last . t) (pixel-width . 918) (pixel-height . 686) (total-width . 131) (total-height . 49) (normal-height . 1.0) (normal-width . 0.72) (buffer "The Beginning of Infinity.org<5>" (selected) (hscroll . 0) (fringes 10 11 nil) (margins nil) (scroll-bars 15 3 t nil) (vscroll . 0) (dedicated) (point . 522794) (start . 522793)))))] "2194-1551-F36D-7CC6" (let ((mk (make-marker))) (add-hook 'desktop-delay-hook `(lambda nil (set-marker ,mk ,nil (get-buffer ," *temp*")))) mk)) "Unprintable entity" 'frameset--jump-to-register nil)) (list 115 "Unprintable entity" (let ((mk (make-marker))) (add-hook 'desktop-delay-hook `(lambda nil (set-marker ,mk ,nil (get-buffer ," *temp*")))) mk)) '(119 . [registerv [93 93 down down 5 93 93] "Unprintable entity" kmacro-execute-from-register "Unprintable entity"]) '(111 file . "~/orgmap/2016/02/") '(105 file . "~/.emacs.d/init.el") '(114 file . "~/src/active/reagent1/project.clj")))
(setq file-name-history '("/Users/conor/orgmap/.git/COMMIT_EDITMSG" "/Users/conor/Dropbox/The Library/popperhindi/The_Open_Society1.txt" "/Users/conor/Dropbox/The Library/popperhindi.zip" "/Users/conor/orgmap/books/The Beginning of Infinity-Notes.org" "/Users/conor/.emacs.d/init.el" "/Users/conor/orgmap/The Beginning of Infinity.org" "/Users/conor/orgmap/books/The_Beginning_of_Infinity.org.txt" "/Users/conor/Dropbox/The Library/Rebecca D. Costa The watchman-s rattle- thinking our way out of extinction.txt" "/Users/conor/orgmap/books/watchmansrattle.org" "/Users/conor/orgmap/blankq.org" "/Users/conor/Dropbox/The Library/Rebecca D. Costa The watchman-s rattle- thinking our way out of extinction.txt" "/Users/conor/orgmap/books/watchmansrattle.org" "/Users/conor/Dropbox/The Library/Rebecca D. Costa The watchman-s rattle- thinking our way out of extinction.txt" "/Users/conor/orgmap/priorities.org" "/Users/conor/orgmap/edgemap.org" "/Users/conor/orgmap/emacs - occur dwim.org" "/Users/conor/orgmap/2016/02/priority.org" "/Users/conor/orgmap/lessons.org" "/Users/conor/orgmap/notes.org" "/Users/conor/orgmap/refile.org" "/Users/conor/orgmap/lessons.org" "/Users/conor/orgmap/emacs.org" "/Users/conor/orgmap/refile.org" "/Users/conor/orgmap/The Beginning of Infinity.org" "/Users/conor/orgmap/emacs.org" "/Users/conor/orgmap/Organizing Life in Plain Text.org" "/Users/conor/.emacs.d/init.el" "/Users/conor/orgmap/emacs.org" "/Users/conor/.ctags" "/Users/conor/.CFUserTextEncoding" "/Users/conor/.ctags" "/Users/conor/src/active/reagent1/env/dev/cljs/reagent1/cards/edgemap/hindi.cljs" "/Users/conor/orgmap/4clojure.org" "/Users/conor/orgmap/2016/02/17.org" "/Users/conor/orgmap/2016/02/priority.org" "/Users/conor/src/active/reagent1/.git/COMMIT_EDITMSG" "/Users/conor/src/active/reagent1/env/dev/cljs/reagent1/cards/edgemap/sanj.cljs" "/Users/conor/src/active/reagent1/.git/COMMIT_EDITMSG" "/Users/conor/src/active/reagent1/env/dev/cljs/reagent1/cards/edgemap/hindi.cljs" "/Users/conor/src/active/reagent1/env/dev/cljs/reagent1/cards.cljs" "/Users/conor/src/active/reagent1/env/dev/cljs/reagent1/cards/edgemap/hindi.cljs" "/Users/conor/orgmap/4clojure.org" "/Users/conor/orgmap/monads.cljs" "/Users/conor/src/active/reagent1/.git/COMMIT_EDITMSG" "/Users/conor/orgmap/02-05-2016.org" "/Users/conor/src/demos/datascript-todo/src/datascript_todo/util.cljs" "/Users/conor/src/active/reagent1/.git/COMMIT_EDITMSG" "/Users/conor/src/active/reagent1/env/dev/cljs/reagent1/cards/edgemap/datascript.cljs" "/Users/conor/orgmap/2016/02/18.org" "/Users/conor/orgmap/2016/02/17.org" "/Users/conor/orgmap/.git/COMMIT_EDITMSG" "/Users/conor/orgmap/blankq.org" "/Users/conor/orgmap/.git/COMMIT_EDITMSG" "/Users/conor/orgmap/2016/02/17.org" "~/orgmap/2016/02/18.org" "/Users/conor/orgmap/2016/02/13.org" "/Users/conor/.lein/profiles.clj" "/Users/conor/src/demos/datascript-todo" "/Users/conor/src/active/reagent1/env/dev/cljs/reagent1/cards/edgemap/dsquestions.cljs" "/Users/conor/src/active/reagent1/env/dev/cljs/reagent1/cards/edgemap/motion.cljs" "/Users/conor/src/active/reagent1/.git/COMMIT_EDITMSG" "/Users/conor/src/active/reagent1/env/dev/cljs/reagent1/cards/typewriter/core.cljs" "/Users/conor/src/active/reagent1/env/dev/cljs/reagent1/cards/typewriter/common.cljc" "/Users/conor/src/active/reagent1/env/dev/cljs/reagent1/cards/edgemap/datascript.cljs" "/Users/conor/orgmap/emacs.org" "/Users/conor/src/active/reagent1/project.clj" "/Users/conor/src/active/reagent1/env/dev/cljs/reagent1/cards/edgemap/hindi.cljs" "~/src/active/reagent1/env/dev/cljs/reagent1/cards/edgemap/hindi.cljs" "~/src/active/reagent1/env/dev/cljs/reagent1/cards/edgemap/followups.cljs" "~/src/active/reagent1/env/dev/cljs/reagent1/cards/edgemap/hindi.cljs" "/Users/conor/src/active/reagent1/env/dev/cljs/reagent1/cards/edgemap/followups.cljs" "/Users/conor/src/active/reagent1/env/dev/cljs/reagent1/cards/contact-cards.cljs" "/Users/conor/orgmap/2016/02/17.org" "~/orgmap/hindi.org" "/Users/conor/orgmap/hindi.org" "/Users/conor/orgmap/2016/02/reminders.org" "~/orgmap/wont/wandering.org" "~/orgmap/2016/02/priority.org" "/Users/conor/orgmap/2016/02/16.org" "~/orgmap/2016/02/15.org" "~/orgmap/music-ideas.org" "~/orgmap/books/melting asphault/accepting devient minds.org" "~/orgmap/books/Julian Jaynes.org" "~/orgmap/books/The Beginning of Infinity.org" "/Users/conor/src/active/reagent1/env/dev/cljs/reagent1/cards.cljs" "~/src/active/reagent1/env/dev/cljs/reagent1/cards/edgemap/hindi.cljs" "~/orgmap/edgemap.org2016/02/priority.org" "~/orgmap/2016/02/priority.org" "~/src/active/reagent1/env/dev/cljs/reagent1/cards/edgemap/sanj.cljs" "/Users/conor/orgmap/emacs.org" "~/orgmap/wont/wandering.org::Storing Windows Setup in Init file :emacs:productivity:" "~/orgmap/wont/wandering.org::How Do I set up Capture for wanderings" "~/orgmap/2016/02/priority.org" "~/orgmap/discoveries" "~/orgmap/wont/wandering.org" "/Users/conor/orgmap/.git/COMMIT_EDITMSG" "~/orgmap/hindi.org::Numbers" "/Users/conor/orgmap/2016/02/15.org" "~/orgmap/hindi.org:present continuous" "/Users/conor/orgmap/.git/COMMIT_EDITMSG"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 206
  "/Users/conor/.emacs.d/init.el"
  "init.el"
  'emacs-lisp-mode
  '(visual-line-mode flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode)
  6652
  '(156 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . prefer-utf-8-unix) (truncate-lines)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/The Beginning of Infinity.org"
  "The Beginning of Infinity.org"
  'org-mode
  '(flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode org-indent-mode)
  374093
  '(19 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . utf-8-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/Karl Popper -- The Open Society and Its Enemies.org"
  "Karl Popper -- The Open Society and Its Enemies.org"
  'org-mode
  '(flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode)
  7208
  '(832771 nil)
  nil
  nil
  '((buffer-file-coding-system . no-conversion-multibyte) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/Dropbox/The Library/popperhindi.zip"
  "popperhindi.zip"
  'archive-mode
  '(flx-ido-mode global-auto-revert-mode company-mode)
  316
  '(nil nil)
  t
  nil
  '((buffer-file-coding-system . no-conversion)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/books/The Beginning of Infinity-Notes.org"
  "The Beginning of Infinity-Notes.org"
  'org-mode
  '(flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode)
  12696
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/blankq.org"
  "blankq.org"
  'org-mode
  '(flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode)
  1
  '(515 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/Dropbox/The Library/Rebecca D. Costa The watchman-s rattle- thinking our way out of extinction.txt"
  "Rebecca D. Costa The watchman-s rattle- thinking our way out of extinction.txt"
  'text-mode
  '(flx-ido-mode global-auto-revert-mode company-mode)
  25927
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-dos)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/2016/02/priority.org"
  "priority.org"
  'org-mode
  '(flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode)
  617
  '(608 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/hindi.org"
  "hindi.org"
  'org-mode
  '(flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/2016/02/reminders.org"
  "reminders.org"
  'org-mode
  '(flx-ido-mode global-auto-revert-mode company-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/refile.org"
  "refile.org"
  'org-mode
  '(flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode)
  1597
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/priorities.org"
  "priorities.org"
  'org-mode
  '(flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode)
  1378
  '(2322 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/emacs.org"
  "emacs.org"
  'org-mode
  '(flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/edgemap.org"
  "edgemap.org"
  'org-mode
  '(flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode)
  2
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/emacs - occur dwim.org"
  "emacs - occur dwim.org"
  'org-mode
  '(flx-ido-mode global-auto-revert-mode company-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/2016/02/12.org"
  "12.org"
  'org-mode
  '(flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/velocity.org"
  "velocity.org"
  'org-mode
  '(flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/mek-notes.org"
  "mek-notes.org"
  'org-mode
  '(flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/notes.org"
  "notes.org"
  'org-mode
  '(flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  "/Users/conor/orgmap/2016/02/11.org"
  "11.org"
  'org-mode
  '(flx-ido-mode auto-revert-mode global-auto-revert-mode company-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (truncate-lines . t)))

(desktop-create-buffer 206
  nil
  "orgmap"
  'dired-mode
  '(flx-ido-mode global-auto-revert-mode company-mode)
  341
  '(nil nil)
  t
  '("/Users/conor/orgmap/")
  nil)

